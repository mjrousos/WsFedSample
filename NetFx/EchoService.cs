//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IEchoService")]
public interface IEchoService
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IEchoService/SendString", ReplyAction = "http://tempuri.org/IEchoService/SendStringResponse")]
    string SendString(string message);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IEchoService/SendString", ReplyAction = "http://tempuri.org/IEchoService/SendStringResponse")]
    System.Threading.Tasks.Task<string> SendStringAsync(string message);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IEchoServiceChannel : IEchoService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EchoServiceClient : System.ServiceModel.ClientBase<IEchoService>, IEchoService
{

    public EchoServiceClient()
    {
    }

    public EchoServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public EchoServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public EchoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public EchoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public string SendString(string message)
    {
        return base.Channel.SendString(message);
    }

    public System.Threading.Tasks.Task<string> SendStringAsync(string message)
    {
        return base.Channel.SendStringAsync(message);
    }
}
